name: AWS ECR push

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2 

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
   
     # Build, tag, and push the image to Amazon ECR
    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env: 
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: "youngiltest"
        GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
  
      run: |
        # Use the GitHub SHA as a unique identifier for the image tag
        IMAGE_TAG="${{ github.sha }}"
  
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        echo "::set-output name=imageTag::$IMAGE_TAG"



      # Update Kubernetes Deployment YAML
    - name: Update Kubernetes Deployment YAML
      run: |
        if [[ -n $(git diff --stat) ]]; then
          git pull origin main
    
   
          sed -i "s|image: .*|image: \"$ECR_REGISTRY/$ECR_REPOSITORY:${{ steps.build-image.outputs.imageTag }}\"|" manifest/02-deployment.yaml
    
          git add manifest/02-deployment.yaml
          git status
          git diff
          git commit -m "Update image tag to $ECR_REGISTRY/$ECR_REPOSITORY:${{ steps.build-image.outputs.imageTag }}"
          git push origin main
        else
          echo "No changes to commit"
        fi
